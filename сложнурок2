/* 1. Реализуйте шаблонную функцию Swap, которая принимает два указателя и обменивает
местами значения, на которые указывают эти указатели (нужно обменивать именно сами
указатели, переменные должны оставаться в тех же адресах памяти).
2. Реализуйте шаблонную функцию SortPointers, которая принимает вектор указателей и
сортирует указатели по значениям, на которые они указывают.
3. Подсчитайте количество гласных букв в книге “Война и мир”. Для подсчета используйте 4
способа:
○ count_if и find
○ count_if и цикл for
○ цикл for и find
○ 2 цикла for
Замерьте время каждого способа подсчета и сделайте выводы.
Справка:
count_if - это алгоритмическая функция из STL, которая принимает 3 параметра: итератор на
начало, итератор на конец и унарный предикат (функцию, принимающую один параметр и
возвращающую тип bool).
find - это метод класса string, который возвращает позицию символа (строки), переданного в
качестве пар
*/

#include <iostream>
#include <vector>
#include <string>
#include <ctime>

using namespace std;

template <typename T1, typename T2>
void Swap(T1* &a, T2* &b) 
//void Swap(int* a, int* b)
{ 
    T1* temp = a;
    a = b;
    b = temp;
    cout << "new pointers are \n" << a << "\t" << b << endl << endl;
}   

void Fulfillvector(const int size) 
{
    vector <int> v;
    for (int i = 0; i < size; i++)
    {
        int a = rand() % 10;
        v.push_back(a);
    }
    
    for (auto elem : v)
    {
        cout << elem << " ";
    }
}

void SortPointers() 
{

}

int main()
{
    cout << "Task #1 \n";
    int a = 4;
    int a1 = 81;
    double b = 10.7;
    double b1 = 18.1;
   
    int* pa = &a;
    int* pa1 = &a1;
    double* pb = &b;
    double* pb1 = &b1;
    
    //хотел сделать передачу любого параметра в функцию, но перед main как понял нельзя употреблять template?
   
    cout << "current pointers are \n" << "pa is " << pa << " pa1 is " << pa1 << " \npb is " << pb << " pb1 is " << pb1 << endl;
    cout << "Fist swap" << endl;

    Swap(pa, pa1);
   
    cout << "Second swap" << endl;
    Swap(pb, pb1);
    
    //Swap(pa, pb1); // получается нельзя через шаблоны приводить разные типы?
    //cout << a << " " << a1 << " " << b << " " << b1 << endl;
    //cout << "pa is " << pa << " pa1 is " << pa1 << "\npb is " << pb << " pb1 is " << pb1 << endl; //двойная проверка

    cout << "Task #2 \n";

    int sizeofvect;
    cout << "please insert size of vector - ";
    cin >> sizeofvect;

    Fulfillvector(sizeofvect);
    

}
